name: Live Integration Tests

on:
  workflow_dispatch: # Manual trigger
    inputs:
      environment:
        description: "Target environment"
        required: true
        type: choice
        options:
          - alpha
          - cloud
      test_filter:
        description: "Test marker filter (e.g., smoke, live_buckets)"
        required: false
        default: "live"

  # Scheduled runs disabled for Phase 1 - enable after validation
  # schedule:
  #   - cron: '0 2 * * *'  # Daily at 2 AM UTC

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  live-tests-buckets:
    runs-on: ubuntu-latest

    # Phase 1: Single service (buckets) to validate framework
    # Phase 2+: Add matrix strategy for other services
    # strategy:
    #   fail-fast: false
    #   matrix:
    #     service: [buckets, assets, queues, processes, jobs, folders]
    #     environment: [alpha, cloud]

    name: "Live Tests - Buckets (Proof of Concept)"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run live tests (buckets only)
        env:
          UIPATH_URL: ${{ github.event.inputs.environment == 'alpha' && secrets.ALPHA_BASE_URL || secrets.CLOUD_BASE_URL }}
          UIPATH_ACCESS_TOKEN: ${{ github.event.inputs.environment == 'alpha' && secrets.ALPHA_ACCESS_TOKEN || secrets.CLOUD_ACCESS_TOKEN }}
          UIPATH_FOLDER_PATH: "Shared"
          CI: "true"
        run: |
          # Phase 1: Run only buckets tests
          # Live tests are excluded by default, so we must explicitly include them
          TEST_MARKER="${{ github.event.inputs.test_filter || 'live' }}"

          uv run pytest \
            -m "${TEST_MARKER} and live_buckets" \
            -v \
            --tb=short \
            --junitxml=test-results-buckets.xml \
            tests/live

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-buckets-${{ github.event.inputs.environment || 'cloud' }}
          path: test-results-buckets.xml

      - name: Publish test results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: test-results-buckets.xml
          check_name: "Live Tests - Buckets"

  summarize:
    needs: [live-tests-buckets]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.live-tests-buckets.result }}" == "success" ]]; then
            echo "✅ Buckets live tests passed (Phase 1)"
          else
            echo "❌ Buckets live tests failed"
            exit 1
          fi
